--   -------------------------------------------------- 
--   Generated by Enterprise Architect Version 9.2.921
--   Created On : Tuesday, 03 December, 2013 
--   DBMS       : MySql 
--   -------------------------------------------------- 

USE discs_calib;

SET FOREIGN_KEY_CHECKS=0;


--  Drop Tables, Stored Procedures and Views 

DROP TABLE IF EXISTS calibration_device CASCADE;
DROP TABLE IF EXISTS calibration_measurement CASCADE;
DROP TABLE IF EXISTS calibration_record CASCADE;
DROP TABLE IF EXISTS config CASCADE;
DROP TABLE IF EXISTS equipment CASCADE;
DROP TABLE IF EXISTS equipment_model CASCADE;

--  Create Tables 
CREATE TABLE calibration_device
(
	calibration_record_id INTEGER NOT NULL,
	physical_component_id INTEGER NOT NULL COMMENT 'equipment id',
	version INTEGER NOT NULL DEFAULT 0 COMMENT 'For concurrency control',
	PRIMARY KEY (calibration_record_id, physical_component_id),
	KEY (calibration_record_id),
	KEY (physical_component_id)

) ENGINE=InnoDB COMMENT='Each row is a device used in a calibration';


CREATE TABLE calibration_measurement
(
	calibration_record_id INTEGER NOT NULL COMMENT 'record identifier',
	step VARCHAR(32) NOT NULL COMMENT 'calibration step',
	function_tested TEXT NOT NULL COMMENT 'tested function',
	nominal_value TEXT NOT NULL COMMENT 'nominal value',
	measured_value TEXT NOT NULL COMMENT 'measured value',
	lower_tolerance TEXT NOT NULL COMMENT 'lower tolerance',
	upper_tolerance TEXT NOT NULL COMMENT 'upper tolerance',
	version INTEGER NOT NULL DEFAULT 0 COMMENT 'For concurrency control',
	PRIMARY KEY (calibration_record_id, step),
	KEY (calibration_record_id)

) ENGINE=InnoDB COMMENT='Each row is a measurement in a calibration';


CREATE TABLE calibration_record
(
	calibration_record_id INTEGER NOT NULL AUTO_INCREMENT,
	physical_component_id INTEGER COMMENT 'equipment id',
	calibration_date DATE NOT NULL COMMENT 'date of calibration',
	performed_by VARCHAR(64) NOT NULL COMMENT 'who did it',
	notes TEXT COMMENT 'calibration notes',
	version INTEGER NOT NULL DEFAULT 0 COMMENT 'For optimistic concurrency control',
	PRIMARY KEY (calibration_record_id),
	KEY (physical_component_id)

) ENGINE=InnoDB COMMENT='Each row represents a calibration';


CREATE TABLE config
(
	name VARCHAR(64) NOT NULL,
	value VARCHAR(128),
	PRIMARY KEY (name)

) ENGINE=InnoDB COMMENT='Configuration info for this module ';


CREATE TABLE equipment
(
	physical_component_id INTEGER NOT NULL,
	serial_number VARCHAR(64) NOT NULL COMMENT 'serial number',
	model_id INTEGER NOT NULL COMMENT 'model identifier',
	manufacturer VARCHAR(64) NOT NULL,
	manuf_model VARCHAR(64) NOT NULL COMMENT 'manufacturer''s model name',
	manuf_serial_number VARCHAR(64) COMMENT 'manufacturer''s serial number',
	description VARCHAR(255) NOT NULL,
	location VARCHAR(64) COMMENT 'location, if component is not installed',
	calib_standard BOOL NOT NULL COMMENT 'Is it a standard for calibration',
	date_last_serviced DATE COMMENT 'last date it was serviced',
	custodian VARCHAR(32) COMMENT 'Custodian of the equipment',
	purchase_order VARCHAR(64) COMMENT 'PO number',
	calib_cycle INTEGER COMMENT 'calibration cycle in days',
	date_modified DATE,
	active BOOL COMMENT 'is the equipment in active use',
	modified_by VARCHAR(64),
	version INTEGER NOT NULL DEFAULT 0 COMMENT 'for concurrency control',
	PRIMARY KEY (physical_component_id),
	UNIQUE UQ_physical_component_serial_number(serial_number),
	KEY (model_id)

) ENGINE=InnoDB COMMENT='Each row represents a calibration equipment.';


CREATE TABLE equipment_model
(
	model_id INTEGER NOT NULL,
	manufacturer VARCHAR(255) NOT NULL,
	model VARCHAR(64) NOT NULL,
	description VARCHAR(255),
	manual_uri VARCHAR(255) COMMENT 'URI for the manual',
	manual_name VARCHAR(255) COMMENT 'name of the manual',
	calibration_cycle INTEGER COMMENT 'calibration cycle in days',
	modified_by VARCHAR(64) COMMENT 'who last modified this record',
	date_modified DATE COMMENT 'when it was last modified',
	version INTEGER NOT NULL DEFAULT 0 COMMENT 'for concurrency control',
	PRIMARY KEY (model_id)

) ENGINE=InnoDB;



SET FOREIGN_KEY_CHECKS=1;


--  Create Foreign Key Constraints 
ALTER TABLE calibration_device ADD CONSTRAINT FK_calibration_device_calibration_record 
	FOREIGN KEY (calibration_record_id) REFERENCES calibration_record (calibration_record_id)
	ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE calibration_device ADD CONSTRAINT FK_calibration_device_physical_component 
	FOREIGN KEY (physical_component_id) REFERENCES equipment (physical_component_id);

ALTER TABLE calibration_measurement ADD CONSTRAINT FK_calibration_measuremnt_calibration_record 
	FOREIGN KEY (calibration_record_id) REFERENCES calibration_record (calibration_record_id);

ALTER TABLE calibration_record ADD CONSTRAINT FK_calibration_record_physical_component 
	FOREIGN KEY (physical_component_id) REFERENCES equipment (physical_component_id)
	ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE equipment ADD CONSTRAINT FK_equipment_equipment_model 
	FOREIGN KEY (model_id) REFERENCES equipment_model (model_id)
	ON DELETE RESTRICT ON UPDATE CASCADE;
